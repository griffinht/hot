# todo
# https://infosec.mozilla.org/guidelines/web_security
events {}
http {
	# why did i do this? because it makes the logs look a little nicer with more info like $host
    log_format main '$remote_addr - $remote_user [$time_local] '
    '"$http_user_agent" "$scheme://$http_host" "$request_method $request_uri $server_protocol" '
    '"$http_referer" '
    '$status $body_bytes_sent $request_time';

    include mime.types;
    # disable sending server version to every client
    server_tokens off;

    # https://www.nginx.com/blog/http-strict-transport-security-hsts-and-nginx/
    #todo add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    server {
        listen 80 default_server;
        include server.conf;
        server_name _;
        # Discourage deep links by using a permanent redirect to home page of HTTPS site
        #todo
        return 404;
    }

    server {
        listen 443 ssl default_server;
        include server.conf;

        ssl_certificate /certificates/griffinht.com.crt;
        ssl_certificate_key /certificates/griffinht.com.key;

        server_name _;

        return 404;
    }

    server {
        listen 443 ssl;
        include server.conf;

        server_name ${DOMAIN};

        location / {
            resolver 127.0.0.11;
            proxy_connect_timeout 3s;

            set $upstream http://griffinht;
            proxy_pass $upstream;

            # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass
            # The default parameter is not permitted if proxy_pass is specified using variables. 
            proxy_redirect $upstream/ /;
        }
    }

    server {
        listen 443 ssl;
        include server.conf;

        # todo *.hot.griffinht.com
        server_name hot.griffinht.com *.griffinht.com;

        location / {
            resolver 127.0.0.11;
            proxy_connect_timeout 3s;

            set $hot_proxy_host hot:80;
            proxy_pass http://$hot_proxy_host;

            # we don't use RFC 7239 Forwarded because i don't think downstream nginx can parse this???
            # actually it might with a map directive but im not making my own regex when this works
            # https://www.nginx.com/resources/wiki/start/topics/examples/forwarded/
            # so we use the standard made up X-Forwarded-* headers
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;

            # downstream nginx will read $http_host and ignore $http_x-forwarded-host when proxying
            # that means we need to override $host here from "$proxy_host" (hot) to "$host" (hot.griffinht.com)
            proxy_set_header Host $host;
        }
    }



    # metrics
    #  server {
    #    listen 8080;
    #    location / {
    #        stub_status on;
    #    }
    #  }

}
