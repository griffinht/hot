# https://www.reddit.com/r/Piracy/comments/cuzmro/guide_how_to_set_up_docker_containers_to/
# https://gitlab.com/-/snippets/1878730

networks:
  default:
  samba:
  openvpn-client:
  
volumes:
  media:
  downloads:

  jellyfin:
  jellyfin-cache:
  qbittorrent:
  radarr:
  radarr-movies:
  jackett:
  jackett-data:

  certbot:

services:
# wireguard
# vpn server
# https://github.com/linuxserver/docker-wireguard
  wireguard:
    image: ghcr.io/linuxserver/wireguard
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - SERVERURL=hot.stzups.com
      - PEERS=2
    volumes:
      - ./wireguard/config:/config
      - /lib/modules:/lib/modules
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1

# samba
# SMB file share
  samba:
    image: dperson/samba
    restart: unless-stopped
    environment:
      - TZ=America/New_York
    networks:
    - samba
    ports:
      - "137:137/udp"
      - "138:138/udp"
      - "139:139/tcp"
      - "445:445/tcp"
    read_only: true
    tmpfs:
      - /tmp
    stdin_open: true
    tty: true
    volumes:
      - downloads:/downloads
    command: '-n -p -s Downloads;/downloads'

# nginx proxy
  nginx:
    image: nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/html/:/etc/nginx/html/
      - certbot:/etc/letsencrypt/
    ports:
      - 443:443
    networks:
      - default
      - openvpn-client

  certbot:
    image: certbot
    build:
      context:
        certbot
    volumes:
      - certbot:/etc/letsencrypt/

# Jellyfin Media Server
  jellyfin:
    image: jellyfin
    build:
      context: jellyfin
    restart: unless-stopped
#    user: uid:gid
    volumes:
      - jellyfin:/config
      - jellyfin-cache:/cache
      - media:/media

# iperf3 speedtest server
  iperf3:
    image: mlabbe/iperf3
    restart: unless-stopped
    ports:
      - 5201:5201/udp
      - 5201:5201/tcp
# healthcheck not needed, just wastes resources
    healthcheck:
      disable: true

#
# OpenVPN client
#

# can be used by other services with network_mode: service:openvpn-client
# make sure to add ports to forward on the vpn
# https://github.com/dperson/openvpn-client/blob/master/docker-compose.yml
  openvpn-client:
    image: dperson/openvpn-client
    restart: unless-stopped
    cap_add:
      - net_admin
    environment:
      - TZ=America/New_York
    networks:
      - openvpn-client
# disable when using DNS flag (-d)
    #read_only: true
    tmpfs:
      - /run
      - /tmp
    security_opt:
      - label:disable
    stdin_open: true
    tty: true
    command: '-d -f \"\"'
    volumes:
      - /dev/net:/dev/net:z
      - ./openvpn-client/vpn:/vpn

#
# VPN services
#

# qBittorrent
# port 8080
  qbittorrent:
    image: linuxserver/qbittorrent
    restart: unless-stopped
    network_mode: service:openvpn-client
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - UMASK_SET=022
    volumes:
      - qbittorrent:/config
      - downloads:/downloads
      - ./qbittorrent/qBittorrent.conf:/config/qBittorrent/qBittorrent.conf

# Radarr
# port 7878
  radarr:
    image: radarr
    build:
      context: radarr
    restart: unless-stopped
    network_mode: service:openvpn-client
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - UMASK_SET=022
    volumes:
      - radarr:/config
      - downloads:/downloads
      - radarr-movies:/movies
      - ./bin/radarr.db:/config/radarr.db

# Jackett
# port 9117
  jackett:
    image: jackett
    build:
      context: jackett
    restart: unless-stopped
    network_mode: service:openvpn-client
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - XDG_DATA_HOME=/data
    volumes:
      - jackett:/config
      - jackett-data:/data
