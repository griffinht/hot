volumes:
  prometheus:
  prometheus_config:
  grafana:
  wireguard:

networks:
  iperf_default:
    external: true

services:

  prometheus:
    image: docker.io/prom/prometheus
    restart: unless-stopped
    depends_on:
      - blackbox_exporter
      - snmp_exporter
      - wireguard_exporter
    networks:
      - default
      - iperf_default 
    ports:
      - 9090:9090
        # todo set external url so alert links work
    volumes:
      - prometheus_config:/config:ro
      - prometheus:/prometheus
    command: --config.file=/config/prometheus.yml
    extra_hosts:
      - host.docker.internal:host-gateway

  blackbox_exporter:
    image: quay.io/prometheus/blackbox-exporter:latest
    restart: unless-stopped

      # todo reduce cpu and figure out what to monitor idk
  cadvisor2:
    image: gcr.io/cadvisor/cadvisor@sha256:3cde6faf0791ebf7b41d6f8ae7145466fed712ea6f252c935294d2608b1af388
    profiles:
      - testing_ignore_todo
    restart: unless-stopped
      # https://github.com/google/cadvisor/issues/3453
    volumes:
      #- /:/rootfs:ro
        #- /var/run:/var/run:ro
        #- /sys:/sys:ro
        #- /var/lib/docker:/var/lib/docker:ro
        #- /dev/disk:/dev/disk:ro
      - /var/lib/docker/:/rootfs/var/lib/docker:ro
      - /proc/:/rootfs/proc:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
        #privileged: true
        #devices:
        #- /dev/kmsg
    ports:
      - 8080:8080
    command: --docker_only=true

      # todo reduce cpu usage
      # and do the same on nerd-vps
  cadvisor:
    image: gcr.io/cadvisor/cadvisor@sha256:3cde6faf0791ebf7b41d6f8ae7145466fed712ea6f252c935294d2608b1af388
    restart: unless-stopped
      # https://github.com/google/cadvisor/issues/3453
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk:/dev/disk:ro
      - /var/lib/docker/:/rootfs/var/lib/docker:ro
      - /proc/:/rootfs/proc:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    privileged: true
    devices:
      - /dev/kmsg
    ports:
      - 8080:8080
    command: --docker_only=true
  # todo alertmanager

  grafana:
    image: docker.io/grafana/grafana-oss
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana

  # in this specific scenario i could also handle with networkmanager but im not gonna install networkmanager everywhere just for this one use case or maybe i should idk...
  # daemon:
  # - docker
  # - guix service
  # environment:
  # - guix host
  # - guix shell
  # - docker container
  wireguard:
    # also has bind:utils for dig command for debugging
    image: wireguard-tools-bash-coreutils-curl
    restart: unless-stopped
    network_mode: host
    cap_add:
      - NET_ADMIN
    volumes:
      #- ./wireguard:/wireguard:ro
      - wireguard:/wireguard:ro
    # sleep doesn't respond to SIGTERM
    stop_signal: KILL
    # if it fails then it needs manual intervention to fix it
    # so we sleep forever regardless to prevent the container from infinitely sleeping
    command: bash -c 'wg-quick up /wireguard/wg.conf; sleep infinity'
    # todo idk if this healthcheck is useful
    # also nothing even monitors it lol
    healthcheck:
      test: ["CMD", "wg", "show", "wg"]

  wireguard_exporter:
    image: docker.io/mindflavor/prometheus-wireguard-exporter@sha256:9d2e9a325f4ea3b2419534774d8b804f949876dc712cbf88a14f87e54bd6b8bb
    network_mode: host
    cap_add:
      - NET_ADMIN
      # port 9586
      # bound to all interfaces
    environment:
      - PROMETHEUS_WIREGUARD_EXPORTER_EXPORT_REMOTE_IP_AND_PORT_ENABLED=true
    command: --prepend_sudo true

  snmp_exporter:
    image: quay.io/prometheus/snmp-exporter:latest@sha256:0360b88d3af2e576402a740f2190f5441ef3ed07b252640af2e93d1cef8209f5
      #port 9116
      #restart: unless-stopped
