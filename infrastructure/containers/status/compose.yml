# https://docs.docker.com/config/daemon/prometheus/
volumes:
  prometheus:
  prometheus_config:
  alertmanager_config:
  xmpp-alerts_password:
  xmpp-alerts_config:
  caddy_config:
  caddy_html:

networks:
  internal:
    driver: bridge
    internal: true

services:

  prometheus:
    image: docker.io/prom/prometheus
    restart: unless-stopped
    depends_on:
      - blackbox_exporter
      - alertmanager
    networks:
      #- internal
      - default
    ports:
      - ${INTERFACE?}:9090:9090
    volumes:
      - prometheus_config:/config:ro
      - prometheus:/prometheus
        # the url to open the Prometheus instance, shown in alerts
    command: --config.file=/config/prometheus.yml --web.external-url=${INTERNAL_URL?}

  blackbox_exporter:
    image: quay.io/prometheus/blackbox-exporter:latest
    networks:
      #- internal
      - default
    ports:
      - ${INTERFACE?}:9115:9115

  alertmanager:
    image: quay.io/prometheus/alertmanager:latest
    depends_on:
      - xmpp-alerts
    networks:
      #- internal
      - default
    ports:
      - ${INTERFACE?}:9093:9093
    volumes:
      - alertmanager_config:/config:ro
        # todo what does this do? --web.external-url
    command: --config.file=/config/alertmanager.yml --web.external-url=http://localhosttodo:123

  xmpp-alerts:
    image: ghcr.io/jelmer/prometheus-xmpp-alerts
    networks:
      #- internal
      - default
    ports:
      - ${INTERFACE?}:9199:9199
    volumes:
      - xmpp-alerts_config:/config:ro
        # todo
      - xmpp-alerts_password:/secrets:ro
    command: python3 -m prometheus_xmpp --config=/config/xmpp-alerts.yml

  caddy:
    image: docker.io/caddy
    restart: unless-stopped
    networks:
      #- internal
      - default
    ports:
      - ${HTTP_PORT?}:80
      - ${HTTPS_PORT?}:443
      - ${INTERFACE?}:2019:2019
    environment:
      DOMAIN: ${DOMAIN?}
    volumes:
      - caddy_config:/etc/caddy:ro
      - caddy_html:/usr/share/caddy:ro

  # unmaintained, todo use this:
  # todo https://github.com/kbknapp/wireguard_exporter
  # todo also change out the other wireguard exporters
  wireguard_exporter:
    image: docker.io/mindflavor/prometheus-wireguard-exporter@sha256:9d2e9a325f4ea3b2419534774d8b804f949876dc712cbf88a14f87e54bd6b8bb
    restart: unless-stopped
    network_mode: host
      #user: root or just prepend sudo i guess
    cap_add:
      - NET_ADMIN
    environment:
      # port 9586
      # todo check out other config options
      # todo security: would be real funny if this guy suddenly decided to ignore this config value - you need a firewall! 
      - PROMETHEUS_WIREGUARD_EXPORTER_ADDRESS=${INTERFACE?}
        #- PROMETHEUS_WIREGUARD_EXPORTER_SEPARATE_ALLOWED_IPS_ENABLED=true
      - PROMETHEUS_WIREGUARD_EXPORTER_EXPORT_REMOTE_IP_AND_PORT_ENABLED=true
        #- PROMETHEUS_WIREGUARD_EXPORTER_VERBOSE_ENABLED=true
        # idk why this is required on the command line but it seems to be
    command: --prepend_sudo true

  cadvisor:
    image: gcr.io/cadvisor/cadvisor@sha256:3cde6faf0791ebf7b41d6f8ae7145466fed712ea6f252c935294d2608b1af388
    profiles:
      - todo
    restart: unless-stopped
      # https://github.com/google/cadvisor/issues/3453
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk:/dev/disk:ro
      - /var/lib/docker/:/rootfs/var/lib/docker:ro
      - /proc/:/rootfs/proc:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    privileged: true
    devices:
      - /dev/kmsg
    ports:
      - 8080:8080
    command: --docker_only=true

  iperf3:
    image: todo
    ports:
      - ${INTERFACE?}:5201:5201
