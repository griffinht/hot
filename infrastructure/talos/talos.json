local secrets = import '/home/griffin/secrets/talos/secrets.json';
local domain = 'talos.hot.griffinht.com';
local endpoint = 'https://' + domain + ':6443';
local allowSchedulingOnControlPlanes = false;
local name = 'talos-hot';
# from make disks (talosctl -n talos.hot.griffinht.com disks --insecure)
local disk = '/dev/vdb';

(function(type) {
  version: 'v1alpha1',  // Indicates the schema used to decode the contents.
  debug: false,  // Enable verbose logging to the console.
  persist: true,
  // Provides machine specific configuration options.
  machine: {
    type: type,  // Defines the role of the machine within the cluster.
    token: secrets.trustdinfo.token,  // The `token` is used by a machine to join the PKI of the cluster.
    // The root certificate authority of the PKI.
    ca: secrets.certs.os,
    certSANs: [
        domain,
    ],
    kubelet: {
      // Uncomment this to enable SANs.
      // - 10.0.0.10
      // - 172.16.0.10
      // - 192.168.0.10
      // Used to provide additional options to the kubelet.
      image: 'ghcr.io/siderolabs/kubelet:v1.30.1',  // The `image` field is an optional reference to an alternative kubelet image.
      defaultRuntimeSeccompProfileEnabled: true,  // Enable container runtime default Seccomp profile.
      disableManifestsDirectory: true,  // The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
      // Provides machine specific network configuration options.
    },
    network: {
    },
    install: {
      // Configures KubeSpan feature.
      // kubespan:
      // enabled: true # Enable the KubeSpan feature.
      // Used to provide instructions for installations.
      disk: disk,  // The disk used for installations.
      image: 'ghcr.io/siderolabs/installer:v1.7.5',  // Allows for supplying the image used to perform the installation.
      wipe: false,  // Indicates if the installation disk should be wiped at installation time.
    },
    registries: {
    },
    features: {
      //
      // Features describe individual Talos features that can be switched on or off.
      rbac: true,  // Enable role-based access control (RBAC).
      stableHostname: true,  // Enable stable default hostname.
      apidCheckExtKeyUsage: true,  // Enable checks for extended key usage of client certificates in apid.
      diskQuotaSupport: true,  // Enable XFS project quota support for EPHEMERAL partition and user disks.
      // KubePrism - local proxy/load balancer on defined port that will distribute
      kubePrism: {
        enabled: true,  // Enable KubePrism support - will start local load balancing proxy.
        port: 7445,  // KubePrism port.
        // Configures host DNS caching resolver.
      },
      hostDNS: {
        enabled: true,  // Enable host DNS caching resolver.
        // # Configure Talos API access from Kubernetes pods.
        // kubernetesTalosAPIAccess:
        //     enabled: true # Enable Talos API access from Kubernetes pods.
        //     # The list of Talos API roles which can be granted for access from Kubernetes pods.
        //     allowedRoles:
        //         - os:reader
        //     # The list of Kubernetes namespaces Talos API access is available from.
        //     allowedKubernetesNamespaces:
        //         - kube-system
        // # Provides machine specific control plane configuration options.
        // # ControlPlane definition example.
        // controlPlane:
        //     # Controller manager machine specific configuration options.
        //     controllerManager:
        //         disabled: false # Disable kube-controller-manager on the node.
        //     # Scheduler machine specific configuration options.
        //     scheduler:
        //         disabled: true # Disable kube-scheduler on the node.
        // # Used to partition, format and mount additional disks.
        // # MachineDisks list example.
        // disks:
        //     - device: /dev/sdb # The name of the disk to use.
        //       # A list of partitions to create on the disk.
        //       partitions:
        //         - mountpoint: /var/mnt/extra # Where to mount the partition.
        //
        //           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
        //           # # Human readable representation.
        //           # size: 100 MB
        //           # # Precise value in bytes.
        //           # size: 1073741824
        // # Configures the logging system.
        // logging:
        //     # Logging destination.
        //     destinations:
        //         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
        //           format: json_lines # Logs format.
        // # Configures the kernel.
        // kernel:
        //     # Kernel modules to load.
        //     modules:
        //         - name: brtfs # Module name.
        // # Configures the seccomp profiles for the machine.
        // seccompProfiles:
        //     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
        //       # The `value` field is used to provide the seccomp profile.
        //       value:
        //         defaultAction: SCMP_ACT_LOG
        // # Configures the node labels for the machine.
        // # node labels example.
        // nodeLabels:
        //     exampleLabel: exampleLabelValue
        // # Configures the node taints for the machine. Effect is optional.
        // # node taints example.
        // nodeTaints:
        //     exampleTaint: exampleTaintValue:NoSchedule
        // Provides cluster specific configuration options.
      },
    },
  },
  cluster: {
    id: secrets.cluster.id,  // Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    secret: secrets.cluster.secret,  // Shared secret of cluster (base64 encoded random 32 bytes).
    // Provides control plane specific configuration options.
    controlPlane: {
      endpoint: endpoint,  // Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
    },
    clusterName: name,  // Configures the cluster's name.
    // Provides cluster specific network configuration options.
    network: {
      dnsDomain: 'cluster.local',  // The domain used by Kubernetes DNS.
      // The pod subnet CIDR.
      podSubnets: [
        '10.244.0.0/16',
        // The service subnet CIDR.
      ],
      serviceSubnets: [
        '10.96.0.0/12',
        // The CNI used.
        // cni:
        //     name: custom # Name of CNI to use.
        //     # URLs containing manifests to apply for the CNI.
        //     urls:
        //         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
      ],
    },
    token: secrets.secrets.bootstraptoken,  // The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    secretboxEncryptionSecret: secrets.secrets.secretboxencryptionsecret,  // A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    // The base64 encoded root certificate authority used by Kubernetes.
    ca: secrets.certs.k8s,
    aggregatorCA: secrets.certs.k8saggregator,
    serviceAccount: secrets.certs.k8sserviceaccount,
    apiServer: {
      image: 'registry.k8s.io/kube-apiserver:v1.30.1',  // The container image used in the API server manifest.
      // Extra certificate subject alternative names for the API server's certificate.
      certSANs: [
        domain,
      ],
      disablePodSecurityPolicy: true,  // Disable PodSecurityPolicy in the API server and default manifests.
      // Configure the API server admission plugins.
      admissionControl: [
        {
          name: 'PodSecurity',  // Name is the name of the admission controller.
          // Configuration is an embedded configuration object to be used as the plugin's
          configuration: {
            apiVersion: 'pod-security.admission.config.k8s.io/v1alpha1',
//https://www.talos.dev/v1.7/kubernetes-guides/configuration/pod-security/
            defaults: {
              enforce: 'baseline',
              'enforce-version': 'latest',
              /*
              audit: 'restricted',
              'audit-version': 'latest',
              warn: 'restricted',
              'warn-version': 'latest',
              */
            },
            exemptions: {
              namespaces: [
                'kube-system',
              ],
              runtimeClasses: [
              ],
              usernames: [
              ],
            },
            kind: 'PodSecurityConfiguration',
            // Configure the API server audit policy.
          },
        },
      ],
      auditPolicy: {
        apiVersion: 'audit.k8s.io/v1',
        kind: 'Policy',
        rules: [
          {
            level: 'Metadata',
            // Controller manager server specific configuration options.
          },
        ],
      },
    },
    controllerManager: {
      image: 'registry.k8s.io/kube-controller-manager:v1.30.1',  // The container image used in the controller manager manifest.
      // Kube-proxy server-specific configuration options
    },
    proxy: {
      image: 'registry.k8s.io/kube-proxy:v1.30.1',  // The container image used in the kube-proxy manifest.
      // # Disable kube-proxy deployment on cluster bootstrap.
      // disabled: false
      // Scheduler server specific configuration options.
    },
    scheduler: {
      image: 'registry.k8s.io/kube-scheduler:v1.30.1',  // The container image used in the scheduler manifest.
      // Configures cluster member discovery.
    },
    discovery: {
      enabled: true,  // Enable the cluster membership discovery feature.
      // Configure registries used for cluster member discovery.
      registries: {
        // Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
        kubernetes: {
          disabled: true,  // Disable Kubernetes discovery registry.
          // Service registry is using an external service to push and pull information about cluster members.
        },
        service: {
        },
      },
    },
    etcd: {
      // External service endpoint.
      // endpoint: https://discovery.talos.dev/
      // Etcd specific configuration options.
      // The `ca` is the root certificate authority of the PKI.
      ca: secrets.certs.etcd,
    },
    extraManifests: [
    ],
    inlineManifests: [
      // - https://www.example.com/manifest1.yaml
      // - https://www.example.com/manifest2.yaml
      // A list of inline Kubernetes manifests.
    ],
    // Allows running workload on control-plane nodes.
    allowSchedulingOnControlPlanes: allowSchedulingOnControlPlanes
  },
  // - name: namespace-ci # Name of the manifest.
  // contents: |- # Manifest contents as a string.
  // apiVersion: v1
  // kind: Namespace
  // metadata:
  // name: ci
  // A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
  // Decryption secret example (do not use in production!).
  // aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
  // Core DNS specific configuration options.
  // coreDNS:
  // image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.
  // External cloud provider configuration.
  // externalCloudProvider:
  // enabled: true # Enable external cloud provider.
  // A list of urls that point to additional manifests for an external cloud provider.
  // manifests:
  // - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
  // - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
  // A map of key value pairs that will be added while fetching the extraManifests.
  // extraManifestHeaders:
  // Token: "1234567"
  // X-ExtraInfo: info
  // Settings for admin kubeconfig generation.
  // adminKubeconfig:
  // certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
})
