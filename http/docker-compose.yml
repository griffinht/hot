networks:
  git_internal:
    external: true
  wireguard_default:
    external: true
  minecraft_default:
    external: true
  data_internal:
    external: true
  speedtest_internal:
    external: true
  webdav_internal:
    external: true
  vpn_default:
    external: true
  vaultwarden_internal:
    external: true
  wireguard_internal:
    external: true
  registry_internal:
    external: true
  rss_default:
    external: true
volumes:
  http_certificates:
    external: true
  http_acme:
    external: true
  http_passwd:
    external: true
services:
  nginx:
    build: ./nginx
    restart: unless-stopped
    depends_on:
      acme:
        condition: service_healthy
#note that propogating source IP addressed requires "DOCKERD_ROOTLESS_ROOTLESSKIT_PORT_DRIVER=slirp4netns"
    ports:
      - 80:80
      - 443:443
    networks:
      - default
      - git_internal
      - wireguard_default
      - minecraft_default
      - data_internal
      - speedtest_internal
      - webdav_internal
      - vpn_default
      - vaultwarden_internal
      - wireguard_internal
      - registry_internal
      - rss_default
    volumes:
      - http_certificates:/certificates:ro
      - http_passwd:/passwd:ro
    healthcheck:
      test: [ "CMD-SHELL", "curl -f https://griffinht.com:443" ]
      interval: 5s
      timeout: 5s
      retries: 5
  acme:
    image: neilpang/acme.sh:3.0.2@sha256:6f5ba560f320cf91f33088cdcba93609b7d4b7418a19b85ac044d9ef6f1291fc
    restart: unless-stopped
    volumes:
      - http_certificates:/certificates
      - http_acme:/acme
    environment:
      - CF_Token=${CERTBOT_CLOUDFLARE?you forgot to configure Cloudflare see README}
      - AWS_ACCESS_KEY_ID=${CERTBOT_AWS_ACCESS_KEY_ID?you forgot to configure AWS Route53 see README}
      - AWS_SECRET_ACCESS_KEY=${CERTBOT_AWS_SECRET_ACCESS_KEY?you forgot to configure AWS Route53 see README}
    command: daemon --issue --cert-home /certificates --config-home /acme --server letsencrypt -d 'griffinht.com' --dns dns_cf -d '*.griffinht.com' --dns dns_cf -d 'stzups.net' --dns dns_cf -d 'griffin.ht' --dns dns_aws
    healthcheck:
      test: [ "CMD", "ls", "/certificates/griffinht.com/griffinht.com.cer" ]
      interval: 1s
      timeout: 1s
      retries: 60
#  dynamic-ip:
#    build: ./dynamic-ip
#    restart: unless-stopped
#    environment:
#      - DYNAMIC-IP_CLOUDFLARE=${DYNAMIC-IP_CLOUDFLARE?you forgot ./dynamic-ip/configure.sh}
